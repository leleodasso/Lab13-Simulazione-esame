------metro PARIS-----CAMMINO MINIMO: TRA DUE NODI

controller:#-----------------------------------------

 def handleCerca(self, e):
        if self._fermataPartenza is None or self._fermataArrivo is None:
            self._view.lst_result.controls.clear()
            self._view.lst_result.controls.append(
                ft.Text(f"Attenzione, selezionare "
                        f"fermate di partenza e di arrivo",
                        color="red"))
            self._view.update_page()
            return

        #-----------------------------------------
        totTime, path = self._model.getShortestPath(self._fermataPartenza,
                                                   self._fermataArrivo)
        #-----------------------------------------
        if path == []:
            self._view.lst_result.controls.clear()
            self._view.lst_result.controls.append(
                ft.Text(f"Non ho trovato un cammino fra {self._fermataPartenza} "
                        f"e {self._fermataArrivo}",
                        color="red"))
            return

        self._view.lst_result.controls.clear()
        self._view.lst_result.controls.append(
            ft.Text(f"Ho trovato un cammino fra {self._fermataPartenza} "
                    f"e {self._fermataArrivo} che impiega {totTime} minuti.",
                    color="green"))
        for n in path:
            self._view.lst_result.controls.append(ft.Text(n, color = "green"))
        self._view.update_page()


model:#-----------------------------------------

    def getShortestPath(self, u, v):
        return nx.single_source_dijkstra(self._grafo, u, v)